{
  "name": "reserva-tu-cancha",
  "version": "1.0.0",
  "description": "Sistema de reservas de canchas deportivas - Deploy forzado para liberar build atascado",
  "main": "server.js",
  "scripts": {
    "start": "node server.js",
    "dev": "nodemon server.js",
    "client": "cd client && npm start",
    "build": "cd client && npm run build",
    "install-client": "cd client && npm install",
    "deploy": "node scripts/deployment/auto-deploy.js",
    "quick-deploy": "git add . && git commit -m \"Quick update\" && git push origin main",
    "deploy-full": "node scripts/deployment/deploy_and_populate.js deploy",
    "populate-db": "node scripts/deployment/deploy_and_populate.js populate",
    "check-db": "node scripts/deployment/deploy_and_populate.js check",
    "check-render": "node scripts/database/check_render_status.js",
    "populate-reservas": "node scripts/database/populate_reservas.js",
    "test-backup": "node scripts/database/test-backup.js",
    "backup-create": "node -e \"const {BackupSystem} = require('./scripts/database/backup-system'); const bs = new BackupSystem(); bs.connectDb().then(() => bs.createBackup()).then(r => console.log(r)).catch(e => console.error(e))\"",
    "backup-list": "node -e \"const {BackupSystem} = require('./scripts/database/backup-system'); const bs = new BackupSystem(); console.log(bs.listBackups())\"",
    "backup-restore": "node -e \"const {BackupSystem} = require('./scripts/database/backup-system'); const bs = new BackupSystem(); bs.connectDb().then(() => bs.restoreFromLatestBackup()).then(r => console.log(r ? 'Restaurado' : 'Error')).catch(e => console.error(e))\"",
    "clean-local-db": "node scripts/clean-database.js",
    "check-prod-db": "node scripts/clean-production-db.js check",
    "clean-prod-db": "node scripts/clean-production-db.js clean",
    "check-duplicates": "node scripts/maintenance/check-duplicates.js",
    "clean-duplicates": "node scripts/maintenance/clean-duplicates.js",
    "fix-complejo-desarrollo-courts": "node scripts/maintenance/fix-magnasports-courts.js",
    "sync-databases": "node scripts/maintenance/sync-databases.js",
    "sync-production-db": "node scripts/maintenance/sync-production-db.js",
    "force-sync-production": "node scripts/maintenance/force-sync-production.js",
    "restore-production-reservations": "node scripts/maintenance/restore-production-reservations.js",
    "simple-restore-reservations": "node scripts/maintenance/simple-restore-reservations.js",
    "sync-databases-improved": "node scripts/maintenance/sync-databases-improved.js",
    "clean-duplicate-courts": "node scripts/maintenance/clean-duplicate-courts.js",
    "auto-backup": "node scripts/maintenance/auto-backup.js",
    "check-charts": "node scripts/diagnostic/check-charts-production.js",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:integration": "jest tests/integration/",
    "test:performance": "jest tests/performance/",
    "test:all": "jest --verbose",
    "logs:report": "node scripts/monitoring/log-monitor.js report",
    "logs:monitor": "node scripts/monitoring/log-monitor.js monitor",
    "logs:cleanup": "node scripts/monitoring/log-monitor.js cleanup",
    "optimize:assets": "node scripts/optimization/optimize-assets.js",
    "optimize:css": "cleancss -o public/optimized/styles.min.css public/styles.css",
    "optimize:js": "terser public/script.js -o public/optimized/script.min.js --compress --mangle",
    "optimize:all": "npm run optimize:assets && npm run optimize:css && npm run optimize:js",
    "optimize:demo3": "node scripts/optimization/optimize-demo3-performance.js",
    "lint": "echo \"No linter configured\" && exit 0",
    "setup-transbank": "node scripts/setup-transbank.js",
    "setup-postgresql": "node scripts/setup-postgresql-local.js",
    "dev-postgresql": "NODE_ENV=development node -r dotenv/config server.js dotenv_config_path=env.postgresql",
    "cleanup-locks": "node scripts/maintenance/cleanup-temporary-locks.js",
    "migrate": "node scripts/migration/migration-manager.js",
    "test-pre-deploy": "node scripts/testing/pre-deploy-tests.js",
    "deploy-safe": "npm run test-pre-deploy && npm run migrate && git add . && git commit -m \"Safe deploy\" && git push origin main",
    "clean-all-reservations": "node scripts/cleanup/clean-all-reservations.js",
    "clean-to-essential": "node scripts/cleanup/clean-to-essential.js",
    "clean-production-essential": "node scripts/cleanup/clean-production-essential.js",
    "verify-postgresql": "node scripts/verify-postgresql-migration.js",
    "setup-test-env": "node scripts/testing/setup-test-environment.js",
    "test-reservations": "npm run setup-test-env && node scripts/testing/automated-reservation-tests.js",
    "test-reservations-headless": "npm run setup-test-env && HEADLESS=true node scripts/testing/automated-reservation-tests.js",
    "test-simple": "node scripts/testing/simple-reservation-tests.js",
    "test-simple-headless": "HEADLESS=true node scripts/testing/simple-reservation-tests.js",
    "test-working": "node scripts/testing/working-reservation-tests.js",
    "test-working-headless": "HEADLESS=true node scripts/testing/working-reservation-tests.js",
    "test-basic": "node scripts/testing/basic-reservation-tests.js",
    "test-final": "node scripts/testing/final-reservation-tests.js",
    "verify-date-fix": "node scripts/verify-date-fix.js",
    "test-complete-date-fix": "node scripts/test-complete-date-fix.js",
    "keep-alive": "node scripts/keep-alive.js",
    "export-render-data": "node scripts/export-render-data.js",
    "configure-chatbot": "node scripts/configure-chatbot.js",
    "check-prod-transbank": "node scripts/diagnostic/check-production-transbank.js",
    "update-prices-5000": "node scripts/update-prices-5000.js",
    "setup-commission-categories": "node scripts/setup-commission-categories.js",
    "update-commissions": "node scripts/update-existing-commissions.js",
    "create-commission-expenses": "node scripts/create-commission-expenses.js",
    "fix-commissions": "npm run setup-commission-categories && npm run update-commissions && npm run create-commission-expenses",
    "fix-production-db": "node scripts/fix-production-database.js",
    "fix-production-schema": "node scripts/fix-production-schema.js",
    "update-borderio-price": "node scripts/update-borderio-price.js",
    "generar-manual": "node scripts/generar-manual-usuario.js",
    "benchmark-current": "node scripts/performance/benchmark-current.js",
    "optimize-database": "node scripts/performance/create-optimized-indexes.js",
    "compare-performance": "node scripts/performance/compare-performance.js",
    "optimize-full": "npm run benchmark-current && npm run optimize-database && npm run compare-performance",
    "rollback-optimization": "node scripts/performance/rollback-indexes.js"
  },
  "dependencies": {
    "@sendgrid/mail": "^8.1.6",
    "bcrypt": "^6.0.0",
    "bcryptjs": "^2.4.3",
    "canvas": "^3.2.0",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "exceljs": "^4.4.0",
    "express": "^4.18.2",
    "express-rate-limit": "^8.0.1",
    "helmet": "^8.1.0",
    "html2canvas": "^1.4.1",
    "jimp": "^1.6.0",
    "jsdom": "^27.0.0",
    "jsonwebtoken": "^9.0.2",
    "jspdf": "^3.0.3",
    "jspdf-autotable": "^5.0.2",
    "multer": "^1.4.5-lts.1",
    "node-fetch": "^2.7.0",
    "nodemailer": "^6.9.4",
    "pg": "^8.11.3",
    "transbank-sdk": "^6.1.0"
  },
  "devDependencies": {
    "@babel/core": "^7.28.5",
    "@babel/preset-env": "^7.28.5",
    "@types/jest": "^30.0.0",
    "babel-jest": "^30.2.0",
    "jest": "^30.2.0",
    "nodemon": "^3.0.1",
    "puppeteer": "^24.25.0",
    "supertest": "^7.1.4"
  },
  "keywords": [
    "reservas",
    "canchas",
    "deportes",
    "padel",
    "futbol"
  ],
  "author": "Tu Nombre",
  "license": "MIT"
}
