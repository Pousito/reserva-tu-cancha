class ChartFilters{constructor(){this.currentFilters={timeRange:"7",complexFilter:"all",sportFilter:"all",dateFrom:null,dateTo:null},this.charts={reservations:null,types:null,hours:null},this.init()}init(){this.createFilterPanel(),this.setupEventListeners(),this.loadInitialData()}createFilterPanel(){if(document.querySelector(".chart-filters"))return;const t=document.querySelector(".chart-container .chart-content");if(!t)return;const e=t.querySelector(".chart-header"),r=t.querySelector(".chart-body");e&&r&&r.insertAdjacentHTML("beforebegin",'\n            <div class="chart-filters mb-3">\n                <div class="row g-2">\n                    <div class="col-md-3">\n                        <label class="form-label small">Período</label>\n                        <select class="form-select form-select-sm" id="timeRangeFilter">\n                            <option value="7">Últimos 7 días</option>\n                            <option value="30">Últimos 30 días</option>\n                            <option value="90">Últimos 3 meses</option>\n                            <option value="custom">Personalizado</option>\n                        </select>\n                    </div>\n                    <div class="col-md-3">\n                        <label class="form-label small">Complejo</label>\n                        <select class="form-select form-select-sm" id="complexFilter">\n                            <option value="all">Todos los complejos</option>\n                        </select>\n                    </div>\n                    <div class="col-md-3">\n                        <label class="form-label small">Deporte</label>\n                        <select class="form-select form-select-sm" id="sportFilter">\n                            <option value="all">Todos los deportes</option>\n                            <option value="futbol">Fútbol</option>\n                            <option value="padel">Pádel</option>\n                        </select>\n                    </div>\n                    <div class="col-md-3">\n                        <label class="form-label small">&nbsp;</label>\n                        <div class="d-flex gap-1">\n                            <button class="btn btn-primary btn-sm" onclick="chartFilters.applyFilters()">\n                                <i class="fas fa-filter"></i> Aplicar\n                            </button>\n                            <button class="btn btn-outline-secondary btn-sm" onclick="chartFilters.resetFilters()">\n                                <i class="fas fa-undo"></i>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div class="row mt-2" id="customDateRange" style="display: none;">\n                    <div class="col-md-6">\n                        <label class="form-label small">Desde</label>\n                        <input type="date" class="form-control form-control-sm" id="dateFromFilter">\n                    </div>\n                    <div class="col-md-6">\n                        <label class="form-label small">Hasta</label>\n                        <input type="date" class="form-control form-control-sm" id="dateToFilter">\n                    </div>\n                </div>\n            </div>\n        ')}setupEventListeners(){document.addEventListener("change",t=>{"timeRangeFilter"===t.target.id&&this.handleTimeRangeChange(t.target.value)}),this.loadComplexes()}async loadComplexes(){try{const t=await AdminUtils.authenticatedFetch(`${API_BASE}/admin/complejos`);if(t&&t.ok){const e=await t.json(),r=document.getElementById("complexFilter");if(r){const t=r.querySelector('option[value="all"]');r.innerHTML="",t&&r.appendChild(t);const a=[];e.forEach(t=>{a.find(e=>e.id===t.id)||a.push(t)}),a.forEach(t=>{const e=document.createElement("option");e.value=t.id,e.textContent=t.nombre,r.appendChild(e)}),a.length}}}catch(t){console.error("Error cargando complejos:",t)}}handleTimeRangeChange(t){const e=document.getElementById("customDateRange");"custom"===t?(e.style.display="block",this.setDefaultCustomDates()):(e.style.display="none",this.currentFilters.timeRange=t)}setDefaultCustomDates(){const t=new Date,e=new Date(t.getTime()-2592e6);document.getElementById("dateFromFilter").value=e.toISOString().split("T")[0],document.getElementById("dateToFilter").value=t.toISOString().split("T")[0]}async applyFilters(){this.showLoadingState();try{const t=document.getElementById("timeRangeFilter").value,e=document.getElementById("complexFilter").value,r=document.getElementById("sportFilter").value;let a,l;if("custom"===t)a=document.getElementById("dateFromFilter").value,l=document.getElementById("dateToFilter").value;else{const e=parseInt(t),r=new Date;a=new Date(r.getTime()-24*e*60*60*1e3).toISOString().split("T")[0],l=r.toISOString().split("T")[0]}this.currentFilters={timeRange:t,complexFilter:e,sportFilter:r,dateFrom:a,dateTo:l},await this.updateReservationsChart(),"function"==typeof window.updateTypesChart&&await this.updateTypesChart(),"function"==typeof window.updateHoursChart&&await this.updateHoursChart(),notificationSystem&&notificationSystem.notifySystemAlert({type:"success",message:"Filtros aplicados correctamente"})}catch(t){console.error("Error aplicando filtros:",t),notificationSystem&&notificationSystem.notifySystemAlert({type:"error",message:"Error al aplicar filtros"})}finally{this.hideLoadingState()}}resetFilters(){document.getElementById("timeRangeFilter").value="7",document.getElementById("complexFilter").value="all",document.getElementById("sportFilter").value="all",document.getElementById("customDateRange").style.display="none",this.currentFilters={timeRange:"7",complexFilter:"all",sportFilter:"all",dateFrom:null,dateTo:null},this.applyFilters()}async updateReservationsChart(){try{this.currentFilters;const t=await AdminUtils.authenticatedFetch(`${API_BASE}/admin/reports`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({dateFrom:this.currentFilters.dateFrom,dateTo:this.currentFilters.dateTo,complexId:"all"===this.currentFilters.complexFilter?null:this.currentFilters.complexFilter,sportType:"all"===this.currentFilters.sportFilter?null:this.currentFilters.sportFilter})});if(t&&t.ok){const e=await t.json();e.charts&&e.charts.reservasPorDia&&window.reservationsChart?(e.charts.reservasPorDia,this.updateChartData(window.reservationsChart,e.charts.reservasPorDia),"function"==typeof window.actualizarTituloGrafico&&window.actualizarTituloGrafico()):window.reservationsChart}else console.error("❌ Error en la respuesta del servidor:",t.status,t.statusText)}catch(t){console.error("❌ Error actualizando gráfico de reservas:",t)}}async updateTypesChart(){try{const t=await AdminUtils.authenticatedFetch(`${API_BASE}/admin/reports`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({dateFrom:this.currentFilters.dateFrom,dateTo:this.currentFilters.dateTo,complexId:"all"===this.currentFilters.complexFilter?null:this.currentFilters.complexFilter,sportType:"all"===this.currentFilters.sportFilter?null:this.currentFilters.sportFilter})});if(t&&t.ok){const e=await t.json();e.charts&&e.charts.reservasPorTipo&&typeChart&&this.updateChartData(typeChart,e.charts.reservasPorTipo)}}catch(t){console.error("Error actualizando gráfico de tipos:",t)}}async updateHoursChart(){try{const t=await AdminUtils.authenticatedFetch(`${API_BASE}/admin/reports`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({dateFrom:this.currentFilters.dateFrom,dateTo:this.currentFilters.dateTo,complexId:"all"===this.currentFilters.complexFilter?null:this.currentFilters.complexFilter,sportType:"all"===this.currentFilters.sportFilter?null:this.currentFilters.sportFilter})});if(t&&t.ok){const e=await t.json();e.charts&&e.charts.horariosPopulares&&hoursChart&&this.updateChartData(hoursChart,e.charts.horariosPopulares)}}catch(t){console.error("Error actualizando gráfico de horarios:",t)}}updateChartData(t,e){if(t&&e){if("line"===t.config.type||"bar"===t.config.type){const r=e.map(t=>t.dia?this.formatDate(t.dia):t.hora?t.hora:t.label||t.name),a=e.map(t=>parseInt(t.cantidad||t.value||0));t.data.labels=r,t.data.datasets[0].data=a}else if("doughnut"===t.config.type){const r=e.map(t=>t.tipo||t.name),a=e.map(t=>parseInt(t.cantidad||t.value||0));t.data.labels=r,t.data.datasets[0].data=a}t.update("active")}}formatDate(t){try{return new Date(t).toLocaleDateString("es-CL",{month:"short",day:"numeric"})}catch(e){return t}}showLoadingState(){const t=document.querySelector('[onclick="chartFilters.applyFilters()"]');t&&(t.innerHTML='<i class="fas fa-spinner fa-spin"></i> Aplicando...',t.disabled=!0)}hideLoadingState(){const t=document.querySelector('[onclick="chartFilters.applyFilters()"]');t&&(t.innerHTML='<i class="fas fa-filter"></i> Aplicar',t.disabled=!1)}loadInitialData(){setTimeout(()=>{this.applyFilters()},1e3)}getCurrentFilters(){return{...this.currentFilters}}getFilterParams(){let t="7d";switch(this.currentFilters.timeRange){case"7":t="7d";break;case"30":t="30d";break;case"90":t="3m";break;case"custom":t="custom"}return{periodo:t,complejo:this.currentFilters.complexFilter,deporte:this.currentFilters.sportFilter,fechaInicio:this.currentFilters.dateFrom,fechaFin:this.currentFilters.dateTo,complejoNombre:this.getComplexName(this.currentFilters.complexFilter)}}getComplexName(t){if("all"===t)return null;const e=document.getElementById("complexFilter");if(e){const r=e.querySelector(`option[value="${t}"]`);return r?r.textContent:null}return null}exportFilteredData(){const t={filters:this.getCurrentFilters(),timestamp:(new Date).toISOString(),data:{reservations:reservationsChart?reservationsChart.data:null,types:typeChart?typeChart.data:null,hours:hoursChart?hoursChart.data:null}},e=JSON.stringify(t,null,2),r=new Blob([e],{type:"application/json"}),a=URL.createObjectURL(r),l=document.createElement("a");l.href=a,l.download=`datos-filtrados-${(new Date).toISOString().split("T")[0]}.json`,l.click(),URL.revokeObjectURL(a),notificationSystem&&notificationSystem.notifySystemAlert({type:"success",message:"Datos filtrados exportados correctamente"})}}let chartFilters;document.addEventListener("DOMContentLoaded",function(){"undefined"!=typeof AdminUtils&&(chartFilters=new ChartFilters)});