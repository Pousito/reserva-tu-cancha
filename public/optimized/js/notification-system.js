class NotificationSystem{constructor(){this.notifications=[],this.maxNotifications=50,this.autoHideDelay=5e3,this.init()}init(){this.createNotificationContainer(),this.createNotificationPanel(),this.setupEventListeners(),this.initializeNotificationState(),this.startAutoRefresh()}initializeNotificationState(){const t=(new Date).toISOString();localStorage.getItem("notificationSystemInitialized")||(localStorage.setItem("lastReservationId",""),localStorage.setItem("lastReservationTimestamp",t),localStorage.setItem("lastLowAvailabilityAlerts",JSON.stringify([])),localStorage.setItem("notificationSystemInitialized","true"))}createNotificationContainer(){const t=document.createElement("div");t.id="toast-container",t.className="toast-container position-fixed top-0 end-0 p-3",t.style.zIndex="9999",document.body.appendChild(t)}createNotificationPanel(){const t=document.querySelector(".sidebar .nav");if(t){const i='\n                <div class="notification-panel mt-3">\n                    <div class="d-flex justify-content-between align-items-center mb-2">\n                        <h6 class="mb-0">\n                            <i class="fas fa-bell me-2"></i>Notificaciones\n                        </h6>\n                        <span class="badge bg-primary" id="notificationCount">0</span>\n                    </div>\n                    <div class="notification-list" id="notificationList">\n                        <div class="text-center text-muted small">\n                            <i class="fas fa-bell-slash"></i><br>\n                            No hay notificaciones\n                        </div>\n                    </div>\n                </div>\n            ';t.insertAdjacentHTML("beforeend",i)}}setupEventListeners(){document.addEventListener("newReservation",t=>{this.notifyNewReservation(t.detail)}),document.addEventListener("reservationCancelled",t=>{this.notifyReservationCancelled(t.detail)}),document.addEventListener("lowAvailability",t=>{this.notifyLowAvailability(t.detail)}),document.addEventListener("systemAlert",t=>{this.notifySystemAlert(t.detail)})}startAutoRefresh(){setInterval(()=>{this.checkForNotifications()},3e4)}async checkForNotifications(){try{await this.checkNewReservations(),await this.checkLowAvailability(),await this.checkSystemAlerts()}catch(t){console.error("Error checking notifications:",t)}}async checkNewReservations(){try{const t=await AdminUtils.authenticatedFetch(`${API_BASE}/admin/reservas-recientes`);if(t&&t.ok){const i=(await t.json())[0];if(i){const t=localStorage.getItem("lastReservationId");localStorage.getItem("lastReservationTimestamp");if(!t||i.id!==t){const t=new Date(i.fecha_creacion||i.fecha),e=new Date;e-t<3e5&&(this.notifyNewReservation(i),localStorage.setItem("lastReservationId",i.id),localStorage.setItem("lastReservationTimestamp",e.toISOString()))}}}}catch(t){console.error("Error checking new reservations:",t)}}async checkLowAvailability(){try{const t=await AdminUtils.authenticatedFetch(`${API_BASE}/admin/disponibilidad-baja`);if(t&&t.ok){const i=await t.json();if(i.length>0){const t=JSON.parse(localStorage.getItem("lastLowAvailabilityAlerts")||"[]"),e=i.map(t=>`${t.complejo}-${t.fecha}-${t.hora}`),a=e.filter(i=>!t.includes(i));a.length>0&&(i.forEach(t=>{const i=`${t.complejo}-${t.fecha}-${t.hora}`;a.includes(i)&&this.notifyLowAvailability(t)}),localStorage.setItem("lastLowAvailabilityAlerts",JSON.stringify(e)))}}}catch(t){console.error("Error checking low availability:",t)}}async checkSystemAlerts(){}shouldShowAlert(t){const i=localStorage.getItem(`lastAlert_${t.type}_${t.message}`);return(new Date).getTime()-(i?new Date(i).getTime():0)>3e5}notifyNewReservation(t){const i={id:Date.now(),type:"success",title:"Nueva Reserva",message:`${t.nombre_cliente||"Cliente"} reservó en ${t.complejo_nombre||"Complejo"}`,data:t,timestamp:new Date,read:!1,icon:"fas fa-calendar-plus"};this.addNotification(i),this.showToast(i)}notifyReservationCancelled(t){const i={id:Date.now(),type:"warning",title:"Reserva Cancelada",message:`${t.nombre_cliente||"Cliente"} canceló su reserva`,data:t,timestamp:new Date,read:!1,icon:"fas fa-calendar-times"};this.addNotification(i),this.showToast(i)}notifyLowAvailability(t){const i={id:Date.now(),type:"warning",title:"Poca Disponibilidad",message:`Solo quedan ${t.disponibles} canchas disponibles en ${t.complejo} a las ${t.hora}`,data:t,timestamp:new Date,read:!1,icon:"fas fa-exclamation-triangle"};this.addNotification(i),this.showToast(i)}notifySystemAlert(t){const i={id:Date.now(),type:t.type||"info",title:"Alerta del Sistema",message:t.message,data:t,timestamp:new Date,read:!1,icon:"fas fa-info-circle"};this.addNotification(i),this.showToast(i)}addNotification(t){this.notifications.unshift(t),this.notifications.length>this.maxNotifications&&(this.notifications=this.notifications.slice(0,this.maxNotifications)),this.updateNotificationPanel(),this.updateNotificationCount()}showToast(t){const i=document.getElementById("toast-container");if(!i)return;const e=`toast-${t.id}`,a=`\n            <div class="toast" id="${e}" role="alert" aria-live="assertive" aria-atomic="true">\n                <div class="toast-header bg-${t.type} text-white">\n                    <i class="${t.icon} me-2"></i>\n                    <strong class="me-auto">${t.title}</strong>\n                    <small class="text-white">${this.formatTime(t.timestamp)}</small>\n                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast"></button>\n                </div>\n                <div class="toast-body">\n                    ${t.message}\n                    <div class="mt-2">\n                        <button class="btn btn-sm btn-outline-primary" onclick="notificationSystem.markAsRead(${t.id})">\n                            Marcar como leída\n                        </button>\n                    </div>\n                </div>\n            </div>\n        `;i.insertAdjacentHTML("beforeend",a);const n=document.getElementById(e);new bootstrap.Toast(n,{autohide:!0,delay:this.autoHideDelay}).show(),n.addEventListener("hidden.bs.toast",()=>{n.remove()})}updateNotificationPanel(){const t=document.getElementById("notificationList");if(!t)return;if(0===this.notifications.length)return void(t.innerHTML='\n                <div class="text-center text-muted small">\n                    <i class="fas fa-bell-slash"></i><br>\n                    No hay notificaciones\n                </div>\n            ');const i=this.notifications.slice(0,10).map(t=>`\n            <div class="notification-item ${t.read?"read":"unread"}" \n                 onclick="notificationSystem.markAsRead(${t.id})">\n                <div class="d-flex align-items-start">\n                    <div class="notification-icon me-2">\n                        <i class="${t.icon} text-${t.type}"></i>\n                    </div>\n                    <div class="flex-grow-1">\n                        <div class="notification-title">${t.title}</div>\n                        <div class="notification-message small">${t.message}</div>\n                        <div class="notification-time small text-muted">\n                            ${this.formatTime(t.timestamp)}\n                        </div>\n                    </div>\n                    ${t.read?"":'<div class="notification-dot"></div>'}\n                </div>\n            </div>\n        `).join("");t.innerHTML=i}updateNotificationCount(){const t=document.getElementById("notificationCount");if(t){const i=this.notifications.filter(t=>!t.read).length;t.textContent=i,t.style.display=i>0?"inline-block":"none"}}markAsRead(t){const i=this.notifications.find(i=>i.id===t);i&&(i.read=!0,this.updateNotificationPanel(),this.updateNotificationCount())}markAllAsRead(){this.notifications.forEach(t=>{t.read=!0}),this.updateNotificationPanel(),this.updateNotificationCount()}clearAllNotifications(){this.notifications=[],this.updateNotificationPanel(),this.updateNotificationCount()}formatTime(t){const i=new Date,e=new Date(t),a=i-e;if(a<6e4)return"Hace un momento";if(a<36e5){const t=Math.floor(a/6e4);return`Hace ${t} minuto${t>1?"s":""}`}if(a<864e5){const t=Math.floor(a/36e5);return`Hace ${t} hora${t>1?"s":""}`}return e.toLocaleDateString("es-CL")}simulateNotification(t="success"){const i={id:Date.now(),type:t,title:"Notificación de Prueba",message:{success:"Nueva reserva realizada exitosamente",warning:"Poca disponibilidad en el complejo principal",info:"Sistema actualizado correctamente",error:"Error en el sistema de pagos"}[t],data:{test:!0},timestamp:new Date,read:!1,icon:"fas fa-bell"};this.addNotification(i),this.showToast(i)}}let notificationSystem;document.addEventListener("DOMContentLoaded",function(){if("undefined"!=typeof AdminUtils&&(notificationSystem=new NotificationSystem,"localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname)){const t=document.createElement("button");t.className="btn btn-sm btn-outline-secondary position-fixed",t.style.cssText="bottom: 20px; right: 20px; z-index: 9999;",t.innerHTML='<i class="fas fa-bell"></i> Test',t.onclick=()=>{const t=["success","warning","info","error"],i=t[Math.floor(Math.random()*t.length)];notificationSystem.simulateNotification(i)},document.body.appendChild(t)}});